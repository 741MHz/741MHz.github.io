<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C | Ranting @ 741 MHz]]></title>
  <link href="http://741MHz.com/blog/categories/c/atom.xml" rel="self"/>
  <link href="http://741MHz.com/"/>
  <updated>2013-12-01T22:33:13-05:00</updated>
  <id>http://741MHz.com/</id>
  <author>
    <name><![CDATA[741MHz.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OOP with ANSI C]]></title>
    <link href="http://741MHz.com/c-oop/"/>
    <updated>2013-03-20T00:00:00-04:00</updated>
    <id>http://741MHz.com/c-oop</id>
    <content type="html"><![CDATA[<p>What if I told you that Linux kernel is object-oriented? Would that surprise you? Or maybe you would think I am a lunatic, and I would understand that. After all, the Linux kernel is mostly written in C, with only a few sections written in Assembly. And everybody knows that C is not an object-oriented language. It is <a href="http://en.wikipedia.org/wiki/List_of_object-oriented_programming_languages">not even listed as such</a> on Wikipedia.</p>

<p>But crazy sometimes is not as crazy as it seems. Did you know that <a href="http://www.youtube.com/watch?v=P8DrxzkwnmA">respected professors who taught Einstein thought he was a goof-off</a>? At a time, if you told those respected scientists that Einstein is in fact a genius who would change the history, they definitely take you for a lunatic. Who would have though, right?</p>

<p>And who would have thought that C can be a used for object-oriented programming? <a href="http://www.cs.rit.edu/~ats/">Axel-Tobias Schreiner</a> did. He even went a step further and wrote a book called «Object-Oriented Programming with ANSI C». It starts like this:</p>

<blockquote><p>Object-oriented programming is the current cure-all — although it has been around for much more then ten years. At the core, there is little more to it then finally applying the good programming principles that we have been taught for more than twenty years. C++ (Eiffel, Oberon-2, Smalltalk … take your pick) is the New Language because it is object-oriented — although you need not use it that way if you do not want to (or know how to), and it turns out that you can do just as well with plain ANSI-C.</p></blockquote>

<p>This is one of the most wonderful books about programming in general, object-oriented approach, C and C++ programming languages that I have ever read. In my opinion, it hasn’t got the attention it deserves. I read it twice — the first time when I was just learning C and the second time when I was mastering C++. If you have been learning C and/or C++ — this is a must read.</p>

<p>Practically, C is a very low-level language and nobody would want to spend hours writing lots of glue code in C to implement a virtual method table — something that C++ compiler does for you automatically, unless it is required. But even if taking up on that challenge is not part of the plan, the Alex’s book is still great — it teaches the fundamental core principles that all object-oriented languages are built upon. C and C++ are there almost for the sake of examples only. Delegate? Explained. Multiple inheritance? Check. Selectors? There. After reading the book, one could basically just look at any language construct, be that C#, Java, Ruby, Python or any other language, and say, — “Yeah, I know what that does and how compiler implements it. That’s easy!”</p>

<p>As it turns out, not only you can do all of that with ANSI C, it is actually the best language to explain what is going on under the hood of other languages. And if you ever look at Linux kernel, you would see that it is one of the greatest examples object-oriented design.</p>

<p>The book <a href="http://www.lulu.com/shop/axel-schreiner/object-oriented-programming-with-ansi-c/paperback/product-17561597.html">can be purchased for $20 from Lulu</a> and it is worth every penny. You can also <a href="http://www.cs.rit.edu/~ats/books/ooc.pdf">download a free PDF version</a> from Mr. Schreiner’s website.</p>

<p>Axel-Tobias Schreiner, Thank You!</p>
]]></content>
  </entry>
  
</feed>
