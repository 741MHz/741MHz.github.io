<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C | Ranting @ 741 MHz]]></title>
  <link href="http://741MHz.com/blog/categories/c/atom.xml" rel="self"/>
  <link href="http://741MHz.com/"/>
  <updated>2013-12-01T18:42:27-05:00</updated>
  <id>http://741MHz.com/</id>
  <author>
    <name><![CDATA[741MHz.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Predefined Macros]]></title>
    <link href="http://741MHz.com/predefined-macros/"/>
    <updated>2010-10-17T00:00:00-04:00</updated>
    <id>http://741MHz.com/predefined-macros</id>
    <content type="html"><![CDATA[<p>Every C and C++ compiler has several object-like macros that are implicitly defined and can be used  without supplying their definitions on the command line or through including header files. Such macros are called &ldquo;predefined&rdquo; and can help figure out for what architecture you compile for, on what platform, if the source code being compiled is C or C++, and even tell the language standard of the code being used.</p>

<p>All predefined macros are described in GCC online documentation. However, not all of them are guaranteed to be defined. Sometimes it is helpful to see a list of macros defined by the compiler with their values, if any. To do that, run a preprocessor with zero input, using the following command:</p>

<pre><code>cpp -dM &lt;/dev/null
</code></pre>

<p>This will produce the output like this:</p>

<p>```</p>

<h1>define <strong>unix</strong> 1</h1>

<h1>define __x86_64 1</h1>

<h1>define <strong>DBL_MIN_10_EXP</strong> (-307)</h1>

<h1>define <strong>FINITE_MATH_ONLY</strong> 0</h1>

<h1>define <strong>GNUC_PATCHLEVEL</strong> 3</h1>

<p>```</p>

<p>From the above output we can tell that code is being compiled for x86_64 architecture. The output may change depending on the platform and/or compiler settings.</p>
]]></content>
  </entry>
  
</feed>
